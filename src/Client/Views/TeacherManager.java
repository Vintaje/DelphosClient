/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.Views;

import Constants.ClientCst;
import Models.Grade;
import Models.Mark;
import Models.Participante;
import Models.StaticResources.LoggedUser;
import Models.User;
import Threads.ManageTaskThread;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author vinta
 */
public class TeacherManager extends javax.swing.JFrame {

    private ArrayList<Grade> grades;
    private ArrayList<Participante> students;
    private Mark mark;

    public ArrayList<Grade> getGradesList() {
        return this.grades;
    }

    public void setGradeList(ArrayList<Grade> grades) {
        this.grades = grades;
    }

    public void setStudentList(ArrayList<Participante> students) {
        this.students = students;
    }

    /**
     * Creates new form TeacherManager
     */
    public TeacherManager() {
        initComponents();
        jPanel1.setEnabled(false);
        btMarks.setEnabled(false);
        new ManageTaskThread(LoggedUser.getLogged().getId(), ClientCst.GET_MY_GRADES, this).start();
    }

    public synchronized void getGrades() {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                createGradesList();
            }
        }, 200);
    }

    public synchronized void getStudents() {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                createStudentList();
            }
        }, 200);
    }

    public synchronized void createGradesList() {
        System.out.println(grades.size());
        if (!grades.isEmpty()) {
            DefaultListModel model = new DefaultListModel();
            for (Grade grade : grades) {
                model.addElement(grade.getCode() + "\t" + grade.getName());
            }
            Grades.setModel(model);
            ListSelectionModel cell = Grades.getSelectionModel();
            cell.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            cell.addListSelectionListener((ListSelectionEvent e) -> {
                jPanel1.setEnabled(true);
                new ManageTaskThread(this.grades.get(Grades.getSelectedIndex()).getId(), ClientCst.GET_MY_STUDENTS, this).start();
            });
        }
    }

    public synchronized void createStudentList() {
        System.out.println(students.size());
        if (!students.isEmpty()) {
            DefaultListModel model = new DefaultListModel();
            for (Participante student : students) {
                model.addElement(student.getName());
            }
            Students.setModel(model);
            ListSelectionModel cell = Students.getSelectionModel();
            cell.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            cell.addListSelectionListener((ListSelectionEvent e) -> {
                btMarks.setEnabled(true);

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Grades = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Students = new javax.swing.JList<>();
        btMarks = new javax.swing.JButton();
        btClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(Grades);

        jScrollPane2.setViewportView(Students);

        btMarks.setText("Set Marks");
        btMarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMarksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(btMarks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btMarks)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btClose.setText("Close");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btClose))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMarksActionPerformed
        // TODO add your handling code here:
        if (Students.getSelectedIndex() != -1) {
            String ans = JOptionPane.showInputDialog(null,
                    "Set mark",
                    "Set mark to Student: " + students.get(Students.getSelectedIndex()).getName(), JOptionPane.INFORMATION_MESSAGE);
            new ManageTaskThread(new Mark(0, students.get(Students.getSelectedIndex()).getId(), LoggedUser.getLogged().getId(), ans), ClientCst.SET_MARKS).start();
        }
    }//GEN-LAST:event_btMarksActionPerformed

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Grades;
    private javax.swing.JList<String> Students;
    private javax.swing.JButton btClose;
    private javax.swing.JButton btMarks;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
