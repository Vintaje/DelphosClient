/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin.Views;

import Connections.StaticConnection;
import Constants.ClientCst;
import Models.Grade;
import Models.Participante;
import Models.StaticResources.LoggedUser;
import Models.StaticResources.Security;
import Models.User;
import Threads.ManageTaskThread;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinta
 */
public class AdminControl extends javax.swing.JFrame {

    int id;
    private short gradeMode;
    private int selectedRow;
    User userSelected;
    private myModel model;
    private ArrayList<String> roles;
    private ArrayList<Grade> grades;

    /**
     * Creates new form AdminControl
     */
    public AdminControl() {
        initComponents();
        pnCurso.setVisible(false);
        lbIdGrade.setVisible(false);
        btEdit.setEnabled(false);

    }

    public javax.swing.JFrame returnWindow() {
        return this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpPanels = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btActivateUser = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btCreate = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        pnCurso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfCodeGrade = new javax.swing.JTextField();
        tfNameGrade = new javax.swing.JTextField();
        btAceptar = new javax.swing.JButton();
        lbIdGrade = new javax.swing.JLabel();
        btClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        btActivateUser.setText("Activate User");
        btActivateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActivateUserActionPerformed(evt);
            }
        });

        jButton1.setText("Set Grade");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btActivateUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btActivateUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(209, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpPanels.addTab("Users", jPanel1);

        jScrollPane3.setViewportView(jList1);

        btCreate.setText("Create");
        btCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreateActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        btAceptar.setText("Aceptar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        lbIdGrade.setText("-1");
        lbIdGrade.setEnabled(false);

        javax.swing.GroupLayout pnCursoLayout = new javax.swing.GroupLayout(pnCurso);
        pnCurso.setLayout(pnCursoLayout);
        pnCursoLayout.setHorizontalGroup(
            pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCursoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCursoLayout.createSequentialGroup()
                        .addGroup(pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCodeGrade)
                            .addGroup(pnCursoLayout.createSequentialGroup()
                                .addGroup(pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfNameGrade))
                        .addContainerGap())
                    .addGroup(pnCursoLayout.createSequentialGroup()
                        .addComponent(lbIdGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );
        pnCursoLayout.setVerticalGroup(
            pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCursoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfCodeGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfNameGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAceptar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCursoLayout.createSequentialGroup()
                        .addComponent(lbIdGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addContainerGap())
        );

        tpPanels.addTab("Grades", jPanel2);

        btClose.setText("Close");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btClose)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpPanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        grades = new ArrayList<>();
        new ManageTaskThread(null, ClientCst.GET_USERS, this).start();
        new ManageTaskThread(null, ClientCst.GET_GRADES, returnWindow()).start();

    }//GEN-LAST:event_formWindowOpened

    private void btActivateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActivateUserActionPerformed
        // TODO add your handling code here:
        System.out.println(roles.size());

        String s = (String) JOptionPane.showInputDialog(
                this,
                "Set the new role", "New Role",
                JOptionPane.QUESTION_MESSAGE, null,
                roles.toArray(),
                roles.get(0));

        for (int i = 0; i < roles.size(); i++) {
            if (s.equals(roles.get(i))) {
                userSelected.setRol((byte) i);
            }
        }
        if (!s.isEmpty()) {
            new ManageTaskThread(userSelected, ClientCst.ACTIVATE_USER, this).start();
        }
    }//GEN-LAST:event_btActivateUserActionPerformed

    private void btCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreateActionPerformed
        // TODO add your handling code here:
        pnCurso.setVisible(true);
        gradeMode = ClientCst.ADD_GRADE;
    }//GEN-LAST:event_btCreateActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
        pnCurso.setVisible(true);
        gradeMode = ClientCst.EDIT_GRADE;
        lbIdGrade.setText(Integer.toString(grades.get(jList1.getSelectedIndex()).getId()));
    }//GEN-LAST:event_btEditActionPerformed

    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        // TODO add your handling code here:
        String code = tfCodeGrade.getText();
        String name = tfNameGrade.getText();
        Grade grade = new Grade(Integer.parseInt(lbIdGrade.getText()), code, name);
        
        if(gradeMode == ClientCst.ADD_GRADE){
            grades.add(grade);
        }else if(gradeMode == ClientCst.EDIT_GRADE){
            grades.get(jList1.getSelectedIndex()).setCode(code);
            grades.get(jList1.getSelectedIndex()).setName(name);
        }
        this.buildGradeList(grades);
        new ManageTaskThread(grade, gradeMode, this).start();
    }//GEN-LAST:event_btAceptarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (grades.size() > 0) {
            ArrayList<String> gradesName = new ArrayList<>();
            for (int i = 0; i < grades.size(); i++) {
                gradesName.add(grades.get(i).getName());
            }
            System.out.println(gradesName.size());

            String s = (String) JOptionPane.showInputDialog(
                    this,
                    "Set the new grade", "New Grade",
                    JOptionPane.QUESTION_MESSAGE, null,
                    gradesName.toArray(),
                    gradesName.get(0));
            model.setValueAt(s, selectedRow, 5);
            int opcion = 0;
            for (int i = 0; i < gradesName.size(); i++) {
                if (s.equals(gradesName.get(i))) {
                    opcion = i;
                }
            }
            Participante student = new Participante();
            student.setId(userSelected.getId());
            student.setRol(userSelected.getRol());
            student.setIdgrade(grades.get(opcion).getId());
            try {

                new ManageTaskThread(student, ClientCst.SET_GRADE, this).start();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(null,"There is no grades in the server",  "Info",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btCloseActionPerformed

    public synchronized void createTables(ArrayList<User> users) {
        try {
            StaticConnection.sendObject(ClientCst.GET_ROLES);
            Object obj = StaticConnection.receiveItem();
            roles = (ArrayList<String>) Security.descifrar(LoggedUser.getLogged().getSecretKey(), obj);
            createTableUsers(users);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public synchronized void buildGradeList(ArrayList<Grade> gradeList) {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                createListGrade(gradeList);
            }
        }, 200);
    }

    public void createListGrade(ArrayList<Grade> grades) {
        System.out.println(grades.size());
        if (!grades.isEmpty()) {
            this.grades = grades;
            DefaultListModel model = new DefaultListModel();
            for (Grade grade : grades) {
                model.addElement(grade.getCode() + "\t" + grade.getName());
            }
            jList1.setModel(model);
            ListSelectionModel cell = jList1.getSelectionModel();
            cell.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            cell.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    btEdit.setEnabled(true);
                    tfCodeGrade.setText(grades.get(jList1.getSelectedIndex()).getCode());
                    tfNameGrade.setText(grades.get(jList1.getSelectedIndex()).getName());
                }
            });
        }
    }

    public void createTableUsers(ArrayList<User> userList) {
        try {

            if (userList != null) {
                model = new myModel();

                model.addColumn("ID");
                model.addColumn("USER");
                model.addColumn("PHONE");
                model.addColumn("ADDRESS");
                model.addColumn("AGE");
                model.addColumn("ROL");
                for (int i = 0; i < userList.size(); i++) {
                    User u = (User) userList.get(i);
                    String rol = roles.get(u.getRol());

                    model.addRow(new Object[]{u.getId(), u.getName(), u.getPhoneNumber(), u.getAddress(), u.getAge(), rol});
                }

                jTable1.setModel(model);
                model.fireTableDataChanged();
                ListSelectionModel cell = jTable1.getSelectionModel();
                cell.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                cell.addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        selectedRow = jTable1.getSelectedRow();
                        id = (int) jTable1.getValueAt(selectedRow, 0);
                        btActivateUser.setEnabled(true);
                        userSelected = new User();
                        userSelected.setId(id);
                        String rol = jTable1.getValueAt(selectedRow, 5).toString();
                        for (int i = 0; i < roles.size(); i++) {
                            if (rol.equals(roles.get(i))) {
                                userSelected.setRol((byte) i);
                            }
                        }

                    }
                });

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public myModel getModel() {
        return model;
    }

    public void setModel(myModel model) {
        this.model = model;
    }

    public ArrayList<Grade> getGrades() {
        return grades;
    }

    public void setGrades(ArrayList<Grade> grades) {
        this.grades = grades;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btActivateUser;
    private javax.swing.JButton btClose;
    private javax.swing.JButton btCreate;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbIdGrade;
    private javax.swing.JPanel pnCurso;
    private javax.swing.JTextField tfCodeGrade;
    private javax.swing.JTextField tfNameGrade;
    private javax.swing.JTabbedPane tpPanels;
    // End of variables declaration//GEN-END:variables

    public ArrayList<String> getRoles() {
        return roles;
    }

    public void setRoles(ArrayList<String> roles) {
        this.roles = roles;
    }

}

class myModel extends DefaultTableModel {

    @Override
    public boolean isCellEditable(int row, int column) {

        return false;
    }
}
